import {
  instrument
} from "./chunk-WIBCVLF7.js";
import {
  require_build
} from "./chunk-I7UT424O.js";
import "./chunk-W4PB7GVE.js";
import "./chunk-NFLFRS66.js";
import "./chunk-HDFKFEZ5.js";
import {
  addons
} from "./chunk-ZB6K7O46.js";
import "./chunk-Z7T5R7Q5.js";
import "./chunk-WT2JB5S2.js";
import "./chunk-USAFBRNH.js";
import "./chunk-FZVBAL7B.js";
import "./chunk-C2OTVWAW.js";
import "./chunk-6JZ4UESQ.js";
import {
  FORCE_REMOUNT,
  STORY_RENDER_PHASE_CHANGED
} from "./chunk-2QZP4WHP.js";
import "./chunk-GV4EFZU7.js";
import "./chunk-3HXI3HIA.js";
import "./chunk-MYBHBS23.js";
import "./chunk-PU4CEDOO.js";
import "./chunk-NEE2J5K3.js";
import "./chunk-TXKHKAHC.js";
import "./chunk-XKKMCKPT.js";
import "./chunk-Y2PDLYVS.js";
import "./chunk-VAJWEW3F.js";
import "./chunk-436X2GC7.js";
import "./chunk-3QFKGUU4.js";
import "./chunk-VKHVOQLF.js";
import "./chunk-AFQEP6K7.js";
import {
  require_es_regexp_exec
} from "./chunk-HIYGDNSV.js";
import {
  require_es_array_iterator,
  require_es_string_iterator
} from "./chunk-DK5NERLR.js";
import "./chunk-3TNBIE4X.js";
import "./chunk-KDRY5QR6.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// ../../node_modules/@storybook/addon-interactions/dist/esm/preset/preview.js
var import_es_array_iterator = __toESM(require_es_array_iterator());
var import_es_string_iterator = __toESM(require_es_string_iterator());
var import_es_regexp_exec = __toESM(require_es_regexp_exec());
var import_jest_mock = __toESM(require_build());
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var JestMock = new import_jest_mock.ModuleMocker(global);
var fn = JestMock.fn.bind(JestMock);
var _instrument = instrument({
  action: fn
}, {
  retain: true
});
var action = _instrument.action;
var channel = addons.getChannel();
var spies = [];
channel.on(FORCE_REMOUNT, function() {
  return spies.forEach(function(mock) {
    var _mock$mockClear;
    return mock === null || mock === void 0 ? void 0 : (_mock$mockClear = mock.mockClear) === null || _mock$mockClear === void 0 ? void 0 : _mock$mockClear.call(mock);
  });
});
channel.on(STORY_RENDER_PHASE_CHANGED, function(_ref) {
  var newPhase = _ref.newPhase;
  if (newPhase === "loading")
    spies.forEach(function(mock) {
      var _mock$mockClear2;
      return mock === null || mock === void 0 ? void 0 : (_mock$mockClear2 = mock.mockClear) === null || _mock$mockClear2 === void 0 ? void 0 : _mock$mockClear2.call(mock);
    });
});
var addActionsFromArgTypes = function addActionsFromArgTypes2(_ref2) {
  var id = _ref2.id, initialArgs = _ref2.initialArgs;
  return Object.entries(initialArgs).reduce(function(acc, _ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), key = _ref4[0], val = _ref4[1];
    if (typeof val === "function" && val.name === "actionHandler") {
      Object.defineProperty(val, "name", {
        value: key,
        writable: false
      });
      Object.defineProperty(val, "__storyId__", {
        value: id,
        writable: false
      });
      acc[key] = action(val);
      spies.push(acc[key]);
      return acc;
    }
    acc[key] = val;
    return acc;
  }, {});
};
var argsEnhancers = [addActionsFromArgTypes];
export {
  argsEnhancers
};
//# sourceMappingURL=@storybook_addon-interactions_preview__js.js.map
